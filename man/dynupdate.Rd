% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynupdate.R
\name{dynupdate}
\alias{dynupdate}
\title{Dynamic Update for Functional Time Series Forecasting}
\usage{
dynupdate(
  data,
  newdata = NULL,
  holdoutdata,
  method = c("ts", "block", "ols", "pls", "ridge"),
  fmethod = c("arima", "ar", "ets", "ets.na", "rwdrift", "rw"),
  pcdmethod = c("classical", "M", "rapca"),
  ngrid = max(1000, ncol(data$y)),
  order = 6,
  robust_lambda = 2.33,
  lambda = 0.01,
  value = FALSE,
  interval = FALSE,
  level = 80,
  pimethod = c("parametric", "nonparametric"),
  B = 1000
)
}
\arguments{
\item{data}{A functional time series object of class \code{fts}.}

\item{newdata}{New observations to incorporate in the forecast.}

\item{holdoutdata}{Holdout data for validation.}

\item{method}{Update method: "ts", "block", "ols", "pls", or "ridge".}

\item{fmethod}{Forecasting method: "arima", "ar", "ets", "ets.na", "rwdrift", or "rw".}

\item{pcdmethod}{Functional PCA method: "classical", "M", or "rapca".}

\item{ngrid}{Number of grid points for smoothing (default: max(1000, ncol(data$y))).}

\item{order}{Number of principal components (default: 6).}

\item{robust_lambda}{Robustness parameter (default: 2.33).}

\item{lambda}{Ridge regression parameter (default: 0.01).}

\item{value}{Logical. If TRUE, return forecast values (default: FALSE).}

\item{interval}{Logical. If TRUE, compute prediction intervals (default: FALSE).}

\item{level}{Confidence level for prediction intervals (default: 80).}

\item{pimethod}{Method for prediction intervals: "parametric" or "nonparametric".}

\item{B}{Number of bootstrap replications (default: 1000).}
}
\value{
If value=TRUE, returns forecast values. Otherwise, returns a list with error measures:
\item{errormse}{Mean squared error}
\item{errormae}{Mean absolute error}
\item{errormape}{Mean absolute percentage error}
}
\description{
Performs dynamic updating of functional time series forecasts using various methods.
}
\examples{
\dontrun{
# Load example data
data(pm_10_GR)

# Perform dynamic update
result <- dynupdate(pm_10_GR, newdata = pm_10_GR$y[,1:10], 
                    holdoutdata = pm_10_GR$y[,11:12], method = "pls")
}

}
\seealso{
\code{\link{ftsm}}, \code{\link{forecast.ftsm}}
}
